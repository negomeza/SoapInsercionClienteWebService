
package ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "MyWebService", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MyWebService {


    /**
     * 
     * @param numero1
     * @param numero2
     * @return
     *     returns int
     */
    @WebMethod(operationName = "Suma")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Suma", targetNamespace = "http://ws/", className = "ws.Suma")
    @ResponseWrapper(localName = "SumaResponse", targetNamespace = "http://ws/", className = "ws.SumaResponse")
    @Action(input = "http://ws/MyWebService/SumaRequest", output = "http://ws/MyWebService/SumaResponse")
    public int suma(
        @WebParam(name = "numero1", targetNamespace = "")
        int numero1,
        @WebParam(name = "numero2", targetNamespace = "")
        int numero2);

    /**
     * 
     * @param lado
     * @return
     *     returns double
     */
    @WebMethod(operationName = "CalcularAreaTrianguloEquilatero")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "CalcularAreaTrianguloEquilatero", targetNamespace = "http://ws/", className = "ws.CalcularAreaTrianguloEquilatero")
    @ResponseWrapper(localName = "CalcularAreaTrianguloEquilateroResponse", targetNamespace = "http://ws/", className = "ws.CalcularAreaTrianguloEquilateroResponse")
    @Action(input = "http://ws/MyWebService/CalcularAreaTrianguloEquilateroRequest", output = "http://ws/MyWebService/CalcularAreaTrianguloEquilateroResponse")
    public double calcularAreaTrianguloEquilatero(
        @WebParam(name = "lado", targetNamespace = "")
        double lado);

    /**
     * 
     * @param altura
     * @param base
     * @return
     *     returns double
     */
    @WebMethod(operationName = "CalcularAreaRomboide")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "CalcularAreaRomboide", targetNamespace = "http://ws/", className = "ws.CalcularAreaRomboide")
    @ResponseWrapper(localName = "CalcularAreaRomboideResponse", targetNamespace = "http://ws/", className = "ws.CalcularAreaRomboideResponse")
    @Action(input = "http://ws/MyWebService/CalcularAreaRomboideRequest", output = "http://ws/MyWebService/CalcularAreaRomboideResponse")
    public double calcularAreaRomboide(
        @WebParam(name = "base", targetNamespace = "")
        double base,
        @WebParam(name = "altura", targetNamespace = "")
        double altura);

    /**
     * 
     * @param lado
     * @return
     *     returns double
     */
    @WebMethod(operationName = "CalcularAreaHexagonoRegular")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "CalcularAreaHexagonoRegular", targetNamespace = "http://ws/", className = "ws.CalcularAreaHexagonoRegular")
    @ResponseWrapper(localName = "CalcularAreaHexagonoRegularResponse", targetNamespace = "http://ws/", className = "ws.CalcularAreaHexagonoRegularResponse")
    @Action(input = "http://ws/MyWebService/CalcularAreaHexagonoRegularRequest", output = "http://ws/MyWebService/CalcularAreaHexagonoRegularResponse")
    public double calcularAreaHexagonoRegular(
        @WebParam(name = "lado", targetNamespace = "")
        double lado);

    /**
     * 
     * @param radio
     * @return
     *     returns double
     */
    @WebMethod(operationName = "CalcularAreaCircunferencia")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "CalcularAreaCircunferencia", targetNamespace = "http://ws/", className = "ws.CalcularAreaCircunferencia")
    @ResponseWrapper(localName = "CalcularAreaCircunferenciaResponse", targetNamespace = "http://ws/", className = "ws.CalcularAreaCircunferenciaResponse")
    @Action(input = "http://ws/MyWebService/CalcularAreaCircunferenciaRequest", output = "http://ws/MyWebService/CalcularAreaCircunferenciaResponse")
    public double calcularAreaCircunferencia(
        @WebParam(name = "radio", targetNamespace = "")
        double radio);

    /**
     * 
     * @param lado
     * @return
     *     returns double
     */
    @WebMethod(operationName = "CalcularAreaCuadrado")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "CalcularAreaCuadrado", targetNamespace = "http://ws/", className = "ws.CalcularAreaCuadrado")
    @ResponseWrapper(localName = "CalcularAreaCuadradoResponse", targetNamespace = "http://ws/", className = "ws.CalcularAreaCuadradoResponse")
    @Action(input = "http://ws/MyWebService/CalcularAreaCuadradoRequest", output = "http://ws/MyWebService/CalcularAreaCuadradoResponse")
    public double calcularAreaCuadrado(
        @WebParam(name = "lado", targetNamespace = "")
        double lado);

    /**
     * 
     * @param altura
     * @param base
     * @return
     *     returns double
     */
    @WebMethod(operationName = "CalcularAreaRectangulo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "CalcularAreaRectangulo", targetNamespace = "http://ws/", className = "ws.CalcularAreaRectangulo")
    @ResponseWrapper(localName = "CalcularAreaRectanguloResponse", targetNamespace = "http://ws/", className = "ws.CalcularAreaRectanguloResponse")
    @Action(input = "http://ws/MyWebService/CalcularAreaRectanguloRequest", output = "http://ws/MyWebService/CalcularAreaRectanguloResponse")
    public double calcularAreaRectangulo(
        @WebParam(name = "base", targetNamespace = "")
        double base,
        @WebParam(name = "altura", targetNamespace = "")
        double altura);

    /**
     * 
     * @param baseMayor
     * @param altura
     * @param baseMenor
     * @return
     *     returns double
     */
    @WebMethod(operationName = "CalcularAreaTrapecio")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "CalcularAreaTrapecio", targetNamespace = "http://ws/", className = "ws.CalcularAreaTrapecio")
    @ResponseWrapper(localName = "CalcularAreaTrapecioResponse", targetNamespace = "http://ws/", className = "ws.CalcularAreaTrapecioResponse")
    @Action(input = "http://ws/MyWebService/CalcularAreaTrapecioRequest", output = "http://ws/MyWebService/CalcularAreaTrapecioResponse")
    public double calcularAreaTrapecio(
        @WebParam(name = "baseMayor", targetNamespace = "")
        double baseMayor,
        @WebParam(name = "baseMenor", targetNamespace = "")
        double baseMenor,
        @WebParam(name = "altura", targetNamespace = "")
        double altura);

    /**
     * 
     * @param lado
     * @return
     *     returns double
     */
    @WebMethod(operationName = "CalcularAreaPentagonoRegular")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "CalcularAreaPentagonoRegular", targetNamespace = "http://ws/", className = "ws.CalcularAreaPentagonoRegular")
    @ResponseWrapper(localName = "CalcularAreaPentagonoRegularResponse", targetNamespace = "http://ws/", className = "ws.CalcularAreaPentagonoRegularResponse")
    @Action(input = "http://ws/MyWebService/CalcularAreaPentagonoRegularRequest", output = "http://ws/MyWebService/CalcularAreaPentagonoRegularResponse")
    public double calcularAreaPentagonoRegular(
        @WebParam(name = "lado", targetNamespace = "")
        double lado);

    /**
     * 
     * @param fechaNacimiento
     * @param correo
     * @param direccion
     * @param id
     * @param saldo
     * @param telefono
     * @param nombre
     * @param fechaUltimaCompra
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "AgregarCliente")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "AgregarCliente", targetNamespace = "http://ws/", className = "ws.AgregarCliente")
    @ResponseWrapper(localName = "AgregarClienteResponse", targetNamespace = "http://ws/", className = "ws.AgregarClienteResponse")
    @Action(input = "http://ws/MyWebService/AgregarClienteRequest", output = "http://ws/MyWebService/AgregarClienteResponse")
    public String agregarCliente(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "direccion", targetNamespace = "")
        String direccion,
        @WebParam(name = "telefono", targetNamespace = "")
        String telefono,
        @WebParam(name = "correo", targetNamespace = "")
        String correo,
        @WebParam(name = "fechaNacimiento", targetNamespace = "")
        String fechaNacimiento,
        @WebParam(name = "saldo", targetNamespace = "")
        double saldo,
        @WebParam(name = "fechaUltimaCompra", targetNamespace = "")
        String fechaUltimaCompra);

    /**
     * 
     * @param usuario
     * @param contra
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Login")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Login", targetNamespace = "http://ws/", className = "ws.Login")
    @ResponseWrapper(localName = "LoginResponse", targetNamespace = "http://ws/", className = "ws.LoginResponse")
    @Action(input = "http://ws/MyWebService/LoginRequest", output = "http://ws/MyWebService/LoginResponse")
    public String login(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario,
        @WebParam(name = "contra", targetNamespace = "")
        String contra);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://ws/", className = "ws.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://ws/", className = "ws.HelloResponse")
    @Action(input = "http://ws/MyWebService/helloRequest", output = "http://ws/MyWebService/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

}
